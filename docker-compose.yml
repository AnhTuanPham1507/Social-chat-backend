version: '3.9'
services:
    cache:
        image: redis:7.2.5
        restart: always
        ports:
            - 6379:6379
        command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
        environment:
            - REDIS_PASSWORD=ewqovxnzsa2438JFGSJFGbsad7dsa76asjj
        volumes:
            - cache:/data
        mem_limit: 512m
        logging:
            driver: 'json-file'
            options:
                max-size: '5m'
                max-file: '3'
        networks:
            - my-network

    postgres:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: social-chat-db
            TZ: 'Asia/Ho_Chi_Minh'
            PGTZ: 'Asia/Ho_Chi_Minh'
        volumes:
            - pg_data:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - my-network

    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - my-network

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: rabbitmq
            RABBITMQ_DEFAULT_PASS: rabbitmq
        ports:
            - '5672:5672' # AMQP port
            - '15672:15672' # Management plugin port
        volumes:
            - rbmq_data:/var/lib/rabbitmq
        command: >
            sh -c "rabbitmq-plugins enable rabbitmq_management &&
                    rabbitmq-plugins enable rabbitmq_prometheus &&
                    rabbitmq-server"
        networks:
            - my-network

    minio:
        image: minio/minio:latest
        container_name: minio
        environment:
            - MINIO_ROOT_USER=minioadmin        # Set your MinIO access key
            - MINIO_ROOT_PASSWORD=minioadmin    # Set your MinIO secret key
        ports:
            - "9000:9000"   # MinIO API port
            - "9001:9001"   # MinIO console port
        volumes:
            - minio_data:/var/lib/minio/data   # Persist data locally
        command: server /data --console-address ":9001"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3
        networks:
            - my-network

volumes:
    cache:
    pg_data:
    rbmq_data:
    minio_data:

networks:
    my-network:
        driver: bridge
